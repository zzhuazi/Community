<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dgut.dao.ReplyMapper">
	<resultMap id="BaseResultMap" type="com.dgut.po.Reply">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="comment_id" property="commentId" jdbcType="INTEGER" />
		<result column="replied_id" property="repliedId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and r.${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and r.${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and r.${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and r.${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, content, publish_time, user_id, comment_id, replied_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.dgut.po.ReplyExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from reply
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from reply
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.dgut.po.ReplyExample">
		delete from reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.dgut.po.Reply"
		useGeneratedKeys="true" keyProperty="id">
		insert into reply (id, content,
		publish_time,
		user_id, comment_id, replied_id
		)
		values
		(#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
		#{publishTime,jdbcType=TIMESTAMP},
		#{userId,jdbcType=INTEGER},
		#{commentId,jdbcType=INTEGER}, #{repliedId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.dgut.po.Reply"
		useGeneratedKeys="true" keyProperty="id">
		insert into reply
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="publishTime != null">
				publish_time,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="commentId != null">
				comment_id,
			</if>
			<if test="repliedId != null">
				replied_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="publishTime != null">
				#{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="commentId != null">
				#{commentId,jdbcType=INTEGER},
			</if>
			<if test="repliedId != null">
				#{repliedId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.dgut.po.ReplyExample"
		resultType="java.lang.Integer">
		select count(*) from reply
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update reply
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=VARCHAR},
			</if>
			<if test="record.publishTime != null">
				publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.commentId != null">
				comment_id = #{record.commentId,jdbcType=INTEGER},
			</if>
			<if test="record.repliedId != null">
				replied_id = #{record.repliedId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update reply
		set id = #{record.id,jdbcType=INTEGER},
		content =
		#{record.content,jdbcType=VARCHAR},
		publish_time =
		#{record.publishTime,jdbcType=TIMESTAMP},
		user_id =
		#{record.userId,jdbcType=INTEGER},
		comment_id =
		#{record.commentId,jdbcType=INTEGER},
		replied_id =
		#{record.repliedId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.dgut.po.Reply">
		update reply
		<set>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="publishTime != null">
				publish_time = #{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="commentId != null">
				comment_id = #{commentId,jdbcType=INTEGER},
			</if>
			<if test="repliedId != null">
				replied_id = #{repliedId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.dgut.po.Reply">
		update reply
		set
		content = #{content,jdbcType=VARCHAR},
		publish_time =
		#{publishTime,jdbcType=TIMESTAMP},
		user_id =
		#{userId,jdbcType=INTEGER},
		comment_id = #{commentId,jdbcType=INTEGER},
		replied_id = #{repliedId,jdbcType=INTEGER}
		where id =
		#{id,jdbcType=INTEGER}
	</update>

	<!-- ************************************************* -->
	<resultMap type="com.dgut.vo.ReplyVO" id="ReplyVOResultMap"
		extends="BaseResultMap">
		<association property="author" javaType="com.dgut.po.User">
			<id column="author_id" property="id" jdbcType="INTEGER" />
			<result column="u_name" property="name" jdbcType="VARCHAR" />
			<result column="u_avatar" property="avatar" jdbcType="VARCHAR" />
		</association>
		<association property="receiver" javaType="com.dgut.po.User">
			<id column="receiver_id" property="id" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="avatar" property="avatar" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	<select id="selectReplyVOs" resultMap="ReplyVOResultMap">
		select
		r.id, r.content, r.publish_time, r.user_id, r.comment_id, r.replied_id
		,
		u.id as
		author_id , u.name as u_name, u.avatar as u_avatar
		, ur.id as
		receiver_id , ur.name , ur.avatar
		<!-- author -->
		from reply as r
		left join user as u
		on user_id = u.id
		left join reply as r2
		on r.replied_id = r2.id
		left join user as
		ur
		on r2.user_id = ur.id
		<!-- 修改了Update_By_Example_Where_Clause 添加了别名 -->
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
		order by publish_time desc
		<if test="page != null">
			limit #{page.start,jdbcType=INTEGER},
			#{page.size,jdbcType=INTEGER}
		</if>
	</select>

	<select id="selectReplyVO" resultMap="ReplyVOResultMap">
		select
		r.id, r.content,
		r.publish_time, r.user_id, r.comment_id, r.replied_id
		, u.id as author_id,
		u.name as u_name, u.avatar as u_avatar
		, ur.id as
		receiver_id , ur.name
		, ur.avatar
		from reply as r
		left join user as u
		on user_id = u.id
		left join reply as r2
		on r.replied_id = r2.id
		left
		join user as ur
		on r2.user_id = ur.id
		where r.id =
		#{replyId,jdbcType=INTEGER}
	</select>
</mapper>