<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dgut.dao.CommentMapper">
	<resultMap id="BaseResultMap" type="com.dgut.po.Comment">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="content" property="content" jdbcType="VARCHAR" />
		<result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
		<result column="replies" property="replies" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="article_id" property="articleId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and c.${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and c.${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and c.${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and c.${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, content, publish_time, replies, user_id, article_id
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.dgut.po.CommentExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from comment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from comment
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from comment
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.dgut.po.CommentExample">
		delete from comment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.dgut.po.Comment">
		insert into comment (id, content, publish_time,
		replies, user_id, article_id
		)
		values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR},
		#{publishTime,jdbcType=TIMESTAMP},
		#{replies,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.dgut.po.Comment">
		insert into comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="publishTime != null">
				publish_time,
			</if>
			<if test="replies != null">
				replies,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="articleId != null">
				article_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="publishTime != null">
				#{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="replies != null">
				#{replies,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="articleId != null">
				#{articleId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.dgut.po.CommentExample"
		resultType="java.lang.Integer">
		select count(*) from comment
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update comment
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=VARCHAR},
			</if>
			<if test="record.publishTime != null">
				publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.replies != null">
				replies = #{record.replies,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.articleId != null">
				article_id = #{record.articleId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update comment
		set id = #{record.id,jdbcType=INTEGER},
		content = #{record.content,jdbcType=VARCHAR},
		publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
		replies = #{record.replies,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		article_id = #{record.articleId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.dgut.po.Comment">
		update comment
		<set>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="publishTime != null">
				publish_time = #{publishTime,jdbcType=TIMESTAMP},
			</if>
			<if test="replies != null">
				replies = #{replies,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="articleId != null">
				article_id = #{articleId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.dgut.po.Comment">
		update comment
		set content = #{content,jdbcType=VARCHAR},
		publish_time = #{publishTime,jdbcType=TIMESTAMP},
		replies = #{replies,jdbcType=INTEGER},
		user_id = #{userId,jdbcType=INTEGER},
		article_id = #{articleId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- *************************** -->
	<resultMap type="com.dgut.vo.CommentVO" id="CommentVOResultMap"
		extends="BaseResultMap">
		<association property="author" javaType="com.dgut.po.User">
			<id column="author_id" property="id" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="avatar" property="avatar" jdbcType="VARCHAR" />
			<result column="email" property="email" jdbcType="VARCHAR" />
			<result column="password" property="password" jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="VARCHAR" />
			<result column="introduce" property="introduce" jdbcType="VARCHAR" />
			<result column="phone" property="phone" jdbcType="VARCHAR" />
			<result column="articles" property="articles" jdbcType="INTEGER" />
			<result column="role_id" property="roleId" jdbcType="INTEGER" />
		</association>
	</resultMap>
	<select id="selectCommentVOs" resultMap="CommentVOResultMap">
		select
		c.id, content, publish_time, replies, user_id, article_id
		,u.id as author_id , name, avatar, email,sex, introduce, phone,articles, role_id
		from comment as c
		left join user as u
		on user_id = u.id
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
		order by publish_time desc
		<if test="page != null">
			limit #{page.start,jdbcType=INTEGER}, #{page.size,jdbcType=INTEGER}
		</if>
	</select>

</mapper>