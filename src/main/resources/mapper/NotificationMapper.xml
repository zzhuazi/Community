<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dgut.dao.NotificationMapper" >
  <resultMap id="BaseResultMap" type="com.dgut.po.Notification" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="is_readed" property="isReaded" jdbcType="BIT" />
    <result column="sender_id" property="senderId" jdbcType="INTEGER" />
    <result column="receiver_id" property="receiverId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, content, url, publish_time, is_readed, sender_id, receiver_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dgut.po.NotificationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from notification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from notification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dgut.po.NotificationExample" >
    delete from notification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dgut.po.Notification" >
    insert into notification (id, content, url, 
      publish_time, is_readed, sender_id, 
      receiver_id)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{isReaded,jdbcType=BIT}, #{senderId,jdbcType=INTEGER}, 
      #{receiverId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dgut.po.Notification" >
    insert into notification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="isReaded != null" >
        is_readed,
      </if>
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="receiverId != null" >
        receiver_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isReaded != null" >
        #{isReaded,jdbcType=BIT},
      </if>
      <if test="senderId != null" >
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null" >
        #{receiverId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dgut.po.NotificationExample" resultType="java.lang.Integer" >
    select count(*) from notification
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update notification
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null" >
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isReaded != null" >
        is_readed = #{record.isReaded,jdbcType=BIT},
      </if>
      <if test="record.senderId != null" >
        sender_id = #{record.senderId,jdbcType=INTEGER},
      </if>
      <if test="record.receiverId != null" >
        receiver_id = #{record.receiverId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update notification
    set id = #{record.id,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      is_readed = #{record.isReaded,jdbcType=BIT},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      receiver_id = #{record.receiverId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dgut.po.Notification" >
    update notification
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isReaded != null" >
        is_readed = #{isReaded,jdbcType=BIT},
      </if>
      <if test="senderId != null" >
        sender_id = #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null" >
        receiver_id = #{receiverId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dgut.po.Notification" >
    update notification
    set content = #{content,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      is_readed = #{isReaded,jdbcType=BIT},
      sender_id = #{senderId,jdbcType=INTEGER},
      receiver_id = #{receiverId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- ******************************************************* -->
  <resultMap type="com.dgut.vo.NotificationVO" id="NotificationVOResultMap"
		extends="BaseResultMap">
		<association property="sender" javaType="com.dgut.po.User">
			<id column="sender_id" property="id" jdbcType="INTEGER" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="avatar" property="avatar" jdbcType="VARCHAR" />
			<result column="email" property="email" jdbcType="VARCHAR" />
			<result column="password" property="password" jdbcType="VARCHAR" />
			<result column="sex" property="sex" jdbcType="VARCHAR" />
			<result column="introduce" property="introduce" jdbcType="VARCHAR" />
			<result column="phone" property="phone" jdbcType="VARCHAR" />
			<result column="articles" property="articles" jdbcType="INTEGER" />
			<result column="role_id" property="roleId" jdbcType="INTEGER" />
		</association>
	</resultMap>
	<select id="selectNotificationVOs" resultMap="NotificationVOResultMap">
		select
		n.id, content, url, publish_time, is_readed, sender_id, receiver_id,
		u.id as sender_id, name, avatar, email, sex, introduce, phone, articles,
		role_id
		from notification as n
		left join user as u
		on receiver_id = u.id
		<if test="userId != null or isReaded != null">
			where 
			<if test="userId != null">
				receiver_id = #{userId,jdbcType=INTEGER}
			</if>
			<if test="userId != null and isReaded != null">
				and
			</if>
			<if test="isReaded != null">
				is_readed = #{isReaded,jdbcType=BIT}
			</if>
		</if>
		<if test="page != null">
			limit  #{page.start,jdbcType=INTEGER},
			#{page.size,jdbcType=INTEGER}
		</if>
	</select>
  
</mapper>